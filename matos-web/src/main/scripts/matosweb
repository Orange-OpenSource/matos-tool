#!/bin/bash

# Location of SUN java JRE (at least 1.6)
REQUIRED_VERSION="1.7"

check_version() {
    VERSION=$($1 -version 2>&1 | grep "java version" | awk '{ print substr($3, 2, length($3)-2); }') 
    [ "$VERSION" '>' "$REQUIRED_VERSION" ]
    return $? 
}

# Check JAVA_HOME directory to see if Java version is adequate
if [ $JAVA_HOME ]
then
    JAVA_EXE=$JAVA_HOME/bin/java
    if ! check_version $JAVA_CAND
    then  
        JAVA_HOME=
    fi
 fi

# If the existing JAVA_HOME directory is adequate, then use it otherwise locate a candidate.
if [ $JAVA_HOME ]
then
    :
else
    for JAVA_CAND in $(locate --regexp '/bin/java$' | xargs echo)
    do
        if [ -f $JAVA_CAND -a -x $JAVA_CAND ]
        then
        	if check_version $JAVA_CAND
        	then
                JAVA_EXE="$JAVA_CAND"
                JAVA_HOME="${JAVA_CAND:0:-9}"
            	break
        	fi
        fi
    done
fi

# If the correct Java version is detected, then export the JAVA_HOME environment variable
if [ $JAVA_HOME ]
then
    export JAVA_HOME
else
	echo "No correct java found"
	exit 1
fi

# Location of matos libraries
MATOS_JAR=matosweb.jar
MATOS_SCRIPT=$(which $0)
MATOS_HOME=$(dirname $(dirname $MATOS_SCRIPT))
EXEC=${MATOS_HOME}/lib/${MATOS_JAR}

while [ ! -f "${EXEC}" ] ; do
    if [ -L "$MATOS_SCRIPT" ] ; then
        MATOS_SCRIPT=$(readlink -f $MATOS_SCRIPT)
        MATOS_HOME=$(dirname $(dirname $MATOS_SCRIPT))
        EXEC=${MATOS_HOME}/lib/${MATOS_JAR}
    else
        echo "Can't find ${EXEC}"
        exit 1
    fi
done

MATOS_HOME=$(readlink -f ${MATOS_HOME})

# Temporary directory
TEMP=${TEMP:-/tmp}

mkdir -p ${TEMP}

${JAVA_EXE} -cp "${MATOS_HOME}/lib/*" -Xmx1500m -Dmatos.keystore=${MATOS_HOME}/keystore -Dmatos.authdb=${MATOS_HOME}/auth.db -Dmatos.lib=${MATOS_HOME} -Dmatos.temp=${TEMP} -jar ${EXEC} -extractDirectory "${MATOS_HOME}/extract" $*


