#!/bin/bash

# Location of SUN java JRE (at least 1.6)
# This script attempts to find an existing installation of Java that meets a minimum version
# requirement on a Linux machine.  If it is successful, it will export a JAVA_HOME environment
# variable that can be used by another calling script.
#
# To specify the required version, set the REQUIRED_VERSION to the major version required, 
# e.g. 1.3, but not 1.3.1.
REQUIRED_VERSION=106


check_version() {
    VERSION=`$1 -version 2>&1 | grep "java version" | awk '{ print substr($3, 2, length($3)-2); }'`
    VERSION=`echo $VERSION | awk '{ print substr($1, 1, 3); }' | sed -e 's;\.;0;g'`
    [ "$VERSION" -a "$VERSION" -ge $REQUIRED_VERSION ]
    return $?    
}

# Transform the required version string into a number that can be used in comparisons
REQUIRED_VERSION=`echo $REQUIRED_VERSION | sed -e 's;\.;0;g'`
# Check JAVA_HOME directory to see if Java version is adequate
if [ $JAVA_HOME ]
then
    JAVA_EXE=$JAVA_HOME/bin/java
    if $(check_version $JAVA_EXE)
    then  
        JAVA_HOME=`echo $JAVA_EXE | awk '{ print substr($1, 1, length($1)-9); }'`
    else
        JAVA_HOME=
    fi
 fi

# If the existing JAVA_HOME directory is adequate, then leave it alone
# otherwise, use 'locate' to search for other possible java candidates and
# check their versions.
if [ $JAVA_HOME ]
then
    :
else
    for JAVA_EXE in `locate bin/java | grep java$ | xargs echo`
    do
        if [ -x $JAVA_EXE ]
        then
            if  $(check_version $JAVA_EXE)
            then
               JAVA_HOME=`echo $JAVA_EXE | awk '{ print substr($1, 1, length($1)-9); }'`
               break
            fi
        fi
    done
fi

# If the correct Java version is detected, then export the JAVA_HOME environment variable
if [ $JAVA_HOME ]
then
    export JAVA_HOME
    echo $JAVA_HOME
fi


# Location of matos libraries
MATOS_JAR=matos-core-0.0.1-SNAPSHOT.jar
MATOS_SCRIPT=$(which $0)
${MATOS_HOME:=$(dirname $(dirname $MATOS_SCRIPT))}
EXEC=${MATOS_HOME}/lib/${MATOS_JAR}

while [ ! -f "${EXEC}" ] ; do
    if [ -L "$MATOS_SCRIPT" ] ; then
        MATOS_SCRIPT=$(readlink -f $MATOS_SCRIPT)
        MATOS_HOME=$(dirname $(dirname $MATOS_SCRIPT))
        EXEC=${MATOS_HOME}/lib/${MATOS_JAR}
    else
        echo "Can't find ${EXEC}"
        exit 1
    fi
done


# Temporary directory
TEMP=/tmp



mkdir -p ${TEMP}

${JAVA_EXE} -cp "${MATOS_HOME}/lib/*" -Xmx1500m -Dmatos.lib=${MATOS_HOME} -Dmatos.temp=${TEMP} com.orange.matos.CoreCLI $*


